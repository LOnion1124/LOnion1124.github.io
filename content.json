{"meta":{"title":"LOnion's blog","subtitle":"","description":"","author":"LOnion","url":"https://LOnion1124.github.io","root":"/"},"pages":[{"title":"","date":"2024-11-13T13:30:09.886Z","updated":"2024-11-13T13:30:09.886Z","comments":true,"path":"about/index.html","permalink":"https://lonion1124.github.io/about/","excerpt":"","text":"关于本站 正在建设中……"},{"title":"","date":"2024-11-13T13:30:23.156Z","updated":"2024-11-13T13:30:23.156Z","comments":true,"path":"gallery/index.html","permalink":"https://lonion1124.github.io/gallery/","excerpt":"","text":"陈列室 正在建设中……"}],"posts":[{"title":"ML学习笔记（一）：k近邻算法（KNN）","slug":"ML学习笔记（一）：k近邻算法（KNN）","date":"2024-11-18T16:00:00.000Z","updated":"2024-11-19T05:29:58.902Z","comments":true,"path":"posts/46f360fae708/","permalink":"https://lonion1124.github.io/posts/46f360fae708/","excerpt":"简要介绍和总结KNN算法，以防忘记","text":"","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://lonion1124.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://lonion1124.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"KNN","slug":"KNN","permalink":"https://lonion1124.github.io/tags/KNN/"}]},{"title":"Onion主题开发","slug":"Onion主题开发","date":"2024-11-09T16:00:00.000Z","updated":"2024-11-19T11:17:59.466Z","comments":true,"path":"posts/2a187cbf082d/","permalink":"https://lonion1124.github.io/posts/2a187cbf082d/","excerpt":"hexo主题Onion的开发过程与介绍","text":"本篇博客将重点放在更加感性化的关于Onion主题开发过程的回忆和记录上。对于hexo-onion的使用说明等技术性内容，我会简洁的写在其github仓库的README文件内。 写在前面 说实话，此刻我的心情是很激动的。此次开发的这个主题不仅是我真正意义上完成的第一个开发项目，更是我高中（准确地说，高二搭建这个博客）以来的宿愿。高中时苦于技术不足（虽然现在依然不足）和缺少时间，一直只能将这个愿望高高挂起。如今步入大学，我想是时候着手满足一下高中时期的缺憾了，于是Onion主题便应运而生。 首先，我要向一些人或物表示感谢，他们的协助对我的开发过程至关重要。 GitHub，一切的源头和支撑。 ChatGPT4o，它教会了我使用jQuery，还完美地帮我写了不少代码。 Bootstrap5，它的设计风格很符合我的审美，丰富的样式库更是令人惊喜。 hexo的许多插件的开发者们，好用的插件赋能便利的功能实现，大大提升开发效率。 所有我阅读的关于自主开发hexo主题的教程文章的作者。尤其是这一系列文章的作者smile-yan，没有他的文章，Onion主题就不会起步。 我的电脑。伟大无需多言。 我十分敬佩能够完成系列教程文章的作者们，他们的努力是极富意义的。 设计理念 Onion主题是一款极简风格、响应式的hexo主题。 主题的设计理念是使创作者能够专注于创作（不需要考虑除了普通Markdown格式之外的任何格式问题），并且使读者能够专注于文章内容，尽可能获得舒适的阅读体验。 主题支持更强大的Markdown渲染，本地搜索等功能[1]，并内置了一些实用的脚本功能，比如目录提取与聚焦、返回顶部等。 Onion主题的样式基于Bootstrap5框架，这使得我几乎没有自己编写任何一个css文件。我很喜欢Bootstrap5的设计风格，简洁而优雅，用起来也很方便。 不幸的是，使用Bootstrap5的方式是在元素内部指定class内容，这导致我难以为hexo根据内容渲染的网页内容指定样式。因此，我不得不采取网页脚本的方式为特定元素分配属性，我决定使用jQuery实现这一功能，因此为了正常使用本主题，请务必保证您的前端环境支持jQuery。 功能介绍 这部分更加详细的内容会放在介绍文档里。简单地说，除了一般的阅读功能外，我为Onion主题内置了如下功能： 本地搜索 代码高亮 LaTeX数学公式渲染 fancybox图片显示 按首字母排序的归档 自动目录提取 返回顶部按钮 i18n国际化支持 为了保证这些功能的正常运行，需要进行一些的插件的安装或者库的引用，具体方法在github仓库中给出。 开发思路 聊一聊我在部分内容开发时的思路，以及一些未竟的想法。有一种幕后花絮的感觉…… 导航栏和页脚 这部分参考了Bootstrap5官网给出的模板，加之小小个性化修改即成。只是单纯的懒。 主页 灵感同样来自于官网模板，借鉴了卡片样式，自主添加了文章封面图展示功能。 信息栏（页面侧边栏） 受到之前使用的Icarus主题的启发，我设计了挂件式的侧边信息展示栏。根据实际页面的不同，它会显示作者信息、文章封面图及摘要或者目录等，并且总是显示站点的分类和标签。我为各个挂件添加了对应的链接功能，方便阅读者实现站内快速跳转。 基本上，用于描述个人信息的文本我都进行了封装，使得Onion主题的使用者能够通过改编主题目录下的配置文件来修改显示信息。 文章页 标题显眼地放在最上方，右侧设计了信息框展示文章分类和发布时间（由于个人写作习惯，Onion主题被设计为适配单层文章分类，即一篇文章至多一个分类，但可以有多个标签）。标题栏下部展示了文章标签，若文章无标签则展示为占位框。 文章主内容框占据主要地位。为了整体美观，Onion主题会将md源文件中的h1、h2标题统一渲染为h3标题并添加下边框，其余标题渲染为h5。侧边栏自动提取文章目录的脚本会统一处理渲染后的h3标题而忽略h5标题。 我为Markdown文件中的大部分格式添加了对应的样式，相应的效果可以在本站的md测试文章里看到.比较值得一提的是Onion主题支持LaTeX渲染（需要加装插件）。 代码高亮基于highlight.js，支持指定语言显示。 我希望实现的效果是在保证创作过程的方便的基础上，尽量使得一切常用的md格式都可以美观且较为符合风格地显示。Onion主题的设计理念是赋能创作者无须在markdown文件里另外写任何除了元数据和普通md格式之外的格式内容，一切美化渲染的工作交给主题完成。我使用的是Typora编辑器，这意味着我只要保证文章在本地渲染正常，它在网页也会是显示正常的。 归档页 基于hexo插件的按首字母分类的归档功能。为什么不使用常用按年份归档而改为按首字母？一方面是由于首页文章已经按照发布时间排序了，另一方面我不认为按时间分类就效率而言比按标题分类更加有效率。对于想要查找文章的读者而言，按标题查找显然比按时间查找更为可行。 侧边弹出栏 提供了一个存放更多功能的接口，唯一的问题是我目前还没有足够多的功能放进去，因此，它现在仅仅是一个模板。可以在配置文件中选择关闭这个组件。 进一步美化 依据之前的经验，还可以为博客网站添加许多所谓的美化功能，比如随机动漫背景图，背景漂浮的线条或者雪花，鼠标点击事件，等等等等。我在两年前建站伊始十分沉迷于这一类小玩意的配置，然而在阅读其他类似的博客网的过程中，我意识到过于多的美化效果其实反而不利于聚焦阅读，这与Onion主题的设计理念背道而驰。因此，我不会在主题中内置任何花里胡哨的效果。当然，或许在后续的开发中我会单独为网站加一些美化效果，但是它们将会是独立的插件，不会与Onion主题合并。 我想要单独提的一点是看板娘。在建站初期我很魔怔地想要实现一个完美的看板娘，因此碰了不少钉子（详见我合并整理的2022年更新日志）。我承认我目前并没有完全地从魔怔的状态中走出来，因此可能未来我会为网站添加一个可爱的妹子。不过，出于前述的原因，她也不会与Onion主题有什么关系。 日后我可能会增加评论功能支持、更加复杂的文章标记和分类系统等等。总的来说，一切以加强创作和阅读体验为重。 总结 碍于本人水平有限，Onion主题的功能远谈不上强大。如果读者愿意尝试为自己的博客使用Onion主题并反馈意见[2]，我将感到十分荣幸。 出于学习交流的目的，我欢迎任何人对Onion主题的修改和增强。 最后，希望Onion主题能越来越好。 1.部分功能需要安装插件，详见github仓库 ↩︎ 2.在首页可以找到我的邮箱 ↩︎","categories":[{"name":"开发日志","slug":"开发日志","permalink":"https://lonion1124.github.io/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"}],"tags":[{"name":"hexo-onion","slug":"hexo-onion","permalink":"https://lonion1124.github.io/tags/hexo-onion/"},{"name":"随笔","slug":"随笔","permalink":"https://lonion1124.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"前端","slug":"前端","permalink":"https://lonion1124.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"以前的更新日志汇总（2022-2023）","slug":"以前的更新日志汇总（2022-2023）","date":"2024-11-08T16:00:00.000Z","updated":"2024-11-20T02:39:35.585Z","comments":true,"path":"posts/533f6d81b26c/","permalink":"https://lonion1124.github.io/posts/533f6d81b26c/","excerpt":"这里记载了建站最初期的更新记录","text":"弄这个个人博客的初衷，其实没什么。我平时也没有特别明显的写日记一类的习惯，所以建立博客也可以说是一时兴起。不过建了才知道这玩意不容易搞，因此我希望我也能够尽我所能让这个地方充实起来。 目前我所在的城市还在因为疫情停课，这一天天的网课上的真的很磨人，不过这些都是没办法的事。不管怎样，衷心希望疫情快快退散。 个人博客里写的大概都是些废话，也许对其他人而言毫无价值，也许对我也毫无价值。但即便这样如果有人愿意来读一读的话我也会很开心。如果你把这个无聊的更新日志看到了这里，谢谢你。 2022.4.7更新 今天更新了icarus主题。 真是相当好看的主题~源码在这里 具体的设置还没来得及弄，简单把首页设置了一下。具体的应该之后几天会弄的吧（如果有时间）。高中党的痛你们不懂啊啊啊啊啊！ 配置什么的都在名字跟config有关的文件里，虽然里面东西好多，不过操作起来还算简单。 config n. [计]显示配置信息命令；配置，布局 主题还提供了评论等功能的插件，看上去很厉害的样子，有时间就弄。 顺带一提，点首页的关注会跳到我的b站账号（也不常用就是了）。 2022.4.8更新 网站运行初期，更新应该会比较频繁。 今天成功地把网站的favicon改成了我的头像（笑 团子 此外，今天依照着Icarus用户指南上面的内容把我能弄明白的大部分内容设置了一下。大概包括下列内容： 如上文提到的，更改了favicon 修改了顶部导航栏的一些内容，删去了\"about\"和\"download on git\"两个部分。 修改了不少挂件： 删去了订阅和关注两个我也不知道怎么用的功能 把目录栏放到了右边（只有在开启目录的文章的文章页面才看得到，比如说点进这篇文章 修改了右上角站长栏（叫自己站长感觉有点羞耻，但是莫名其妙地爽）里面的相关链接，把推特和脸书之类的东西换成了b站和网易云音乐 想了想还是把友链挂件给去了，因为我没有友好网站啊！路漫漫其修远兮…… 应该就这些，不过总感觉忘了些什么。昨天也是，明明把那些需要插件而报错的几个模块删掉了（比如分享和打赏），结果在写更新日志的时候忘掉了这件事。 顺带一提，评论功能真的好复杂，懒得搞…… 比起评论插件，我更想弄一个看板娘来 深夜重大更新 哈哈，什么叫做一不做，二不休啊（得意 锵锵~看板娘来了！ 找到一篇大佬的专门针对Icarus的教程（传送门）。对着里面猛一通操作之后总算是搞定了。 这个看板娘的模板应该是一个挺流行的多合一看板娘套装，我记得之前也在哪边看到过。里面整合了2233两位爷和其他好多妹子，应该说功能超级完善，只不过我还不会用。源码在这里。 2022.4.9更新 啊啊啊完全搞不懂看板娘怎么设置！虽然说默认的功能已经非常之香了，不过到底还是比不过DIY啊。目前还没有找到相关的教程，也完全无从下手。 （流下菜鸟的泪水） 今天把网站的logo换成了自制的样式，如下图： 用3d画图草草画的，感觉有点丑，不过我已经尽力了…… 再抱怨一下，github的速度真是太慢了。我每次加载自己的博客都跟蜗牛爬似的，以及上次说过的看板娘的问题。 昨天偶然翻到的一篇教程，里面有各种花里胡哨的博客美化方式。虽然里面看板娘的教程没有帮助到我，不过我根据里面的内容为博客添加了背景动态线和鼠标单击特效，感觉还不错。至少现在这个博客看起来有了一点生机~ 此外，还开启了自带的不蒜子统计功能，看看到时候我把博客分享出去后究竟能有几个人来看呐……总不会一个人都没有吧（小声 下午更新 找到一篇讲解看板娘设置的教程，学会了修改看板娘位置的方法。不过那个toggle图标总是弄不好，因此最后还是没有更改位置。还有一个原因是Icarus的两栏布局有点问题，如果左侧挂件挂到右边而左侧置空时，中间文章的位置不会自动调整，我也不会手动修改，所以最后什么都没有弄。 另外，根据教程里的说法，这个看板娘的模型来源是通过某个接口弄来的在线玩意，然后那个接口好像没有大陆服务，所以这么慢（此消息有待证实）。如果这样的话那么加载慢的原因就算是找到了。网上说解决办法是自建一个接口……太复杂了我不想弄。就这样吧。 我觉得如果要添加模型的话，这个复杂的路子恐怕是必须要弄明白的……任重而道远啊。 2022.4.10更新 经过这几天的涂涂改改，小站已经基本上有了一个博客网站的样子。虽然说还有许多花里胡哨的美化可以添加，不过正如那篇文章里说的： 创作第一，体验第二，避免繁杂，简洁为上！ 所以重不在量而在质。才不是为我太菜找借口！ 话说回来，折腾了好久，我终于决定放弃优化我的看板娘。实在不会。尝试了自建api不过失败得很惨。就这样吧。已经很可爱了不是么？ 还是说说今天更改了哪些内容吧。 更换了个人头像。黄色团子实在太多了，换了个黑白团子…… 把看板娘的大小调小了一点，从300px到250px，这样就不会影响阅读和点击或者挡住底部的统计数据了。 把顶部导航栏的内容换成了中文，方便阅读 挂上了友链挂件。希望之后能有更多友链~ 此外，按照csdn一篇关于icarus主题的说法，有几个优化速度的小技巧，也一并设置了。虽然好像没什么效果，不过聊胜于无嘛。 之后中心应该就不在更新上了，更新日志的数量应该也会减少。期待第一篇正式博客的发表。 （刚刚写的时候想到了要更改的地方，可是现在怎么也想不起来……老了老了。） 深夜更新 想起来要干啥了……每次载入网页的时候会有一个蓝色进度条动画，但是因为本来速度就慢所以看得让人很不爽。索性关闭了这个插件。另外，本来想顺手把看板娘的透明度调一下，但是总感觉哪边怪怪的，所以又换了回来。反正现在的大小也不会影响阅读，再加上看板娘有切换是否显示功能，咱就不搞这些消失play什么的啦~ 2022.4.11更新 把个人头像的黑白团子换回了黄色团子，然后把网站logo的黄色团子换成了黑白团子，这样看上去更整洁一点。另外，修改了个人资料挂件的相关链接。另外，把背景动态线的源码拷贝到了本地。再拷贝的时候我灵光一闪，感觉我找到了本地化看板娘api的方法以及之前失败的原因：没有先行部署。然后我解决了问题，之后发现—— 加载速度更慢了。 好吧github还不如外源api。这下我是彻底放弃了。就这样吧。 2022.4.13更新 修复了看板娘功能按钮大小不匹配导致退出按钮消失的bug。 2022.4.16更新 去除了左边栏的个人信息块，让整体观感好了一点。 修改了左边栏挂件的先后顺序。 2022.4.23更新 将左侧个人信息块美化一些后又加了回来。本来是想添加一个动态文字的效果的，不过没有成功。 2022.5.26更新 哇一晃一个月了。最近没什么时间写文章，预计之后会有博客更新…… 今天猛然发现看板娘消失了！好一番折腾之后，经过比对live2d-widget里的autoload(在github开源地址这里)之后才发现原来是之前储存看板娘模型的网址换地方了。 现在的api地址是这里。 这个月没什么空管博客，所以更新记录就一份。本来还是和6月份的合在一起的，后来想想为了整齐一点就单独开一个文档了。 2022.6.1更新 为了使文章不那么拥挤，将目录挂件移到了左侧，同时减小了左侧栏宽度 根据这篇教程里的指示维持了目录栏的粘滞特性，不让它随滚动消失 缩小了看板娘尺寸（250px→225px），以方便阅读 暂时删去了友链板块，因为感觉没什么用…… 目前正在犹豫是否要给网站增加背景图。 2022.6.2更新 根据昨天的那篇教程，将侧边栏的底色半透明化了，配合背景的动画效果看上去会更加美观一些 给网页上的各板块增加了鼠标移动到相应位置时浮动阴影加深的动画效果 修改了标签挂件中标签的显示颜色，让它看上去不那么突兀 针对文章阅读页面，做出了下列优化： 在版权模块下面增加了一根分割线 修改了标签的图标 针对首页的文章速览，做出了下列优化： 将发布日期、更新日期的时间格式更改为数字的“年-月-日”，并增加了图标 增加了一根分割线 修改了“阅读更多”按钮的样式，顺便把”更多“改成了”全文“，听上去更顺一点 注：以上更改均根据这篇教程中的内容 昨天缩小了看板娘，结果又忘记缩小配套的图标了。今天修复了这个问题，顺便调整了看板娘说话栏的大小 根据官方文档修改了文章页面的挂件显示规则 加宽了页面宽度，代价是看板娘又挡掉了一点东西……算了，一切以阅读体验优先…… 删除了针对文章的访客统计功能。其实我很喜欢这个功能，不过它出bug了，统计的并非各个文章的访问次数而是总访问次数。我猜可能是因为文章标题有中文导致无法识别的原因？搞不懂…… 更新了站首语 另外网站的加载速度是越来越慢了……不知道怎么搞…… 2022.6.3更新 把首页的个人头像加了回去 修改了文章页的挂件类型 另外看板娘的飞机彩蛋不知道为什么失灵了…… 2022.6.8更新 把首页的头像去了白底。之前因为没有给挂件底色加透明度所以有没有白底都看不出来，前几天加了透明之后头像的白底就很突兀，今天便解决掉这个问题。利用的工具是这个网站。 2022.6.21更新 将看板娘工具上调了10px。 2022.7.9更新 换了新电脑，因此重新安装了git、node，并且设置了本地与GitHub端的链接。 2022.8.10更新 呼！终于完成了更换电脑后博客的重生…… 详情可以参考我写的博客里的记录。 2022.8.13更新 为了解决博客页面过于单调的问题，今天添加了随机背景动漫图片。 将此篇文章里更改背景中的图片地址换成随机的图片api接口即可。 随后，为了美观，还更改了顶部栏、底部栏的颜色和不透明度，并将文章栏（在不影响阅读的基础上）也设置为了半透明。 顺便把网站logo的白底给去了。 本来我是想不加背景而更改网站配色的，不过这个博客主题的配色方案修改起来非常复杂，就放弃了。 此外，由于添加了背景，动态线条的特效也被我删去了。这导致了整个网站看上去一动不动。本来为了优化此问题，我打算添加自动下雪的效果，可是效果并不理想（有一个效果理想的模板，可我不会用），遂放弃。 能力还是太差了啊，唉。 另外，给看板娘加了几句话。 本来还想修改一下网站字体，可惜googlefonts上不去。算了。 还有，把鼠标单击特效改成了随机颜色。 傍晚更新 我都佩服我自己。之前我说： 本来为了优化此问题，我打算添加自动下雪的效果，可是效果并不理想（有一个效果理想的模板，可我不会用），遂放弃。 但是我没有死心，经过不懈的折腾，我成功地为博客加入了美丽的3d下雪效果。 代码来自这里。 不过，这里只提供了最原始的html代码，具体整合进入icarus的方法是我摸出来的。（我没有一点前端或者后端知识，真就全是连蒙带猜靠直觉。） 为此，我专门写了一篇文章来记录搭建此功能的过程。 另外，不知发生了什么事，网站的字体出了一点问题（我什么也没做啊，真奇怪）。总之把head.jsx里的cyberpunk注释掉，换回了default就正常了。（为什么默认会是cyberpunk啊？） 在页面变小的时候，顶部栏会分为两行，此时下面一行的颜色不知道怎么更改。试着修改了\"node_modules-stylus.styl\"里的参数（第一行由$scheme-main变为rgba(255,255,255,0.7)），有变化但是不知道为什么还是不一样。实在没辙，将就一下吧…… 2022.8.14更新 昨天的颜色透明度问题依然没有解决，不过这次尝试直接更改\"node_modules-stylus-variables.styl\"里的预设颜色配置，虽然效果没变化，不过起码修改起来方便。而且由于修改的是默认配置，因此也不用担心整体的不协调。（现在所有默认白色都有透明效果啦！） 本来想着加一个背景音乐播放器，不过不会弄而且感觉用处不大，遂作罢。 2022.9.11更新 由于不知道什么原因，看板娘的图片一直无法加载成功，与之相对的各类功能和聊天消息倒是可以，这说明是应该是后端有什么变动，但我尚不知道原因以及解决方法……只能忍痛切割了看板娘功能。有朝一日一定要自建一个稳定的看板娘。","categories":[{"name":"开发日志","slug":"开发日志","permalink":"https://lonion1124.github.io/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"}],"tags":[]},{"title":"Markdown渲染示例","slug":"markdown渲染示例","date":"2024-10-31T16:00:00.000Z","updated":"2025-01-02T12:40:14.768Z","comments":true,"path":"posts/36856836d52b/","permalink":"https://lonion1124.github.io/posts/36856836d52b/","excerpt":"","text":"1. 排版 粗体 斜体 删除线 引用: Onion主题为大部分Markdown格式配置了样式 有序列表: 项目1 项目2 项目3 无序列表: 项目1 项目2 项目3 2. 图片与链接 图片: 链接: Onion主题Github仓库 3. 标题 Onion主题会将h1、h2标题统一渲染为h3标题并添加下边框，其余标题渲染为h5。 4. 代码 行内代码块实例：hello world，git bash here 整块代码高亮示例（代码来自GPT4）: #include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;cmath&gt; using namespace std; class Rectangle &#123; public: Rectangle(double w, double h) : width(w), height(h) &#123;&#125; double area() &#123; return width * height; &#125; double perimeter() &#123; return 2 * (width + height); &#125; private: double width, height; &#125;; int main() &#123; cout &lt;&lt; &quot;C++ Syntax Test&quot; &lt;&lt; endl; vector&lt;int&gt; numbers = &#123;1, 2, 3, 4, 5&#125;; for (int i : numbers) &#123; cout &lt;&lt; &quot;Number: &quot; &lt;&lt; i &lt;&lt; endl; &#125; Rectangle rect(10.5, 20.3); cout &lt;&lt; &quot;Area: &quot; &lt;&lt; rect.area() &lt;&lt; endl; cout &lt;&lt; &quot;Perimeter: &quot; &lt;&lt; rect.perimeter() &lt;&lt; endl; return 0; &#125; import math class Circle: def __init__(self, radius): self.radius = radius def area(self): return math.pi * self.radius ** 2 def perimeter(self): return 2 * math.pi * self.radius if __name__ == &quot;__main__&quot;: print(&quot;Python Syntax Test&quot;) numbers = [1, 2, 3, 4, 5] for num in numbers: print(f&quot;Number: &#123;num&#125;&quot;) circle = Circle(10) print(f&quot;Area: &#123;circle.area()&#125;&quot;) print(f&quot;Perimeter: &#123;circle.perimeter()&#125;&quot;) &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;HTML Syntax Test&lt;/title&gt; &lt;style&gt; body &#123; font-family: Arial, sans-serif; background-color: #f4f4f4; &#125; h1 &#123; color: #333; &#125; .highlight &#123; color: #0077cc; font-weight: bold; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;HTML Syntax Test&lt;/h1&gt; &lt;p&gt;Here is some text with &lt;span class=&quot;highlight&quot;&gt;highlighted text&lt;/span&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Item 1&lt;/li&gt; &lt;li&gt;Item 2&lt;/li&gt; &lt;li&gt;Item 3&lt;/li&gt; &lt;/ul&gt; &lt;button onclick=&quot;alert(&#39;Button clicked!&#39;)&quot;&gt;Click Me&lt;/button&gt; &lt;/body&gt; &lt;/html&gt; function greet(name) &#123; return `Hello, $&#123;name&#125;!`; &#125; const numbers = [10, 20, 30, 40, 50]; let sum = 0; numbers.forEach(num =&gt; &#123; sum += num; console.log(`Number: $&#123;num&#125;, Current Sum: $&#123;sum&#125;`); &#125;); const person = &#123; name: &quot;Alice&quot;, age: 25, greet: function() &#123; console.log(greet(this.name)); &#125; &#125;; person.greet(); const factorial = (n) =&gt; &#123; return (n === 0 || n === 1) ? 1 : n * factorial(n - 1); &#125;; console.log(`Factorial of 5: $&#123;factorial(5)&#125;`); 5. 表格 Item Value Computer $1600 Phone $12 Pipe $1 可以指定对齐方式, 如Item列左对齐, Value列右对齐, Qty列居中对齐 Item Value Qty Computer $1600 5 Phone $12 12 Pipe $1 234 6. Html 标签 支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格： 值班人员 星期一 星期二 星期三 李强 张明 王平 提示, 如果想对图片的宽度和高度进行控制, 你也可以通过img标签, 如: 7. 脚注 basic footnote[1] here is an inline footnote[2] and another one[3] and another one[4] 8. LaTeX 公式 行内公式： 质能守恒方程可以用一个很简洁的方程式\\(E=mc^2\\)来表达。 整行公式： \\[ \\frac{1}{2} + \\frac{3}{4} = \\frac{5}{4} \\] \\[ \\frac{d}{dx} \\left( x^2 + 3x + 2 \\right) = 2x + 3 \\] \\[ lim_{x \\to 0} \\frac{\\sin x}{x} = 1 \\] \\[ A = \\begin{pmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{pmatrix} \\] \\[ \\sin x = \\sum_{n=0}^{\\infty} (-1)^n \\frac{x^{2n+1}}{(2n+1)!} \\] 1.basic footnote content ↩︎ 2.inline footnote ↩︎ 3.paragraph footnote content ↩︎ 4.footnote content with some markdown ↩︎","categories":[],"tags":[]},{"title":"《无职转生》：异世界也是一整个世界","slug":"《无职转生》：异世界也是一整个世界","date":"2023-05-13T16:00:00.000Z","updated":"2025-01-02T13:20:35.130Z","comments":true,"path":"posts/c1c73b9cd753/","permalink":"https://lonion1124.github.io/posts/c1c73b9cd753/","excerpt":"——谈“那部作品”和异世界题材","text":"作品简介传送门：Bangumi介绍页||萌娘百科介绍页 《无职转生～到了异世界就拿出真本事～》（下文简称《无职》）是陪伴了我相当长一段时间的作品，它对我的意义重大且特殊。不过，我不准备啰嗦那些琐事。趁着补完小说之际，我想像做阅读理解那样来分析一下这部作品的优秀之处，以及写一写我对于现在普遍的异世界题材（通称“厕纸”）的一些看法。 本文不可避免的有剧透。文中对小说和动漫均有涉及，但以小说为主。（动漫可以说做得精妙绝伦，对于原作党来说无可指摘） 先谈谈个人感受吧。 我很喜欢这部作品。可以说它是我最喜欢的作品之一。如果将来有研究轻小说的课程，而我是那门课程的老师的话，我会把《无职》作为“优秀异世界作品”的典型来讲。为什么这么说呢，因为在我看来，《无职》才是对得起“异世界作品”这一名号的作品。 我在 入宅四年——补番推荐个人榜 这篇博客里这么说： 无职作为最早的那一批作品，真正创造出了大有可为的异世界。 异世界是什么？是一个充满着幻想的，不同于我们这个世界的世界。这是一个能供创作者尽情发挥想象与才情，不用顾忌现实的条条框框，可以大刀阔斧地创造的舞台。因此在我看来，异世界作品从来都是最难以创作的作品类型之一，因为作者需要具备堪比上帝的能力。然而很可惜的是，现在很多作家把异世界当成了一种发泄简单欲望的工具。我想说，那些“厕纸”作品，根本不配称为异世界作品。“厕纸”的世界，并不能够称之为一个世界。它不具有一个世界应该有的内涵和厚度，不具有一个世界应该有的文化和魅力。它像童话一般单纯，却又夹杂着成年人的欲望和冲动。归根到底，它们只是作者以“异世界”为突破口，倾泻出来的对现实不满的消极逃避心理的简单映射而已。他们没有意识到：异世界也是一整个世界。异世界应该有不明显亚于真实世界的厚度。这种厚度可以是社会的复杂，人性的矛盾，或者是某些无法消弭的苦难和困惑。当然根据作品的定位，这些要素可以适当简略，不过它们依然是必要的。 很幸运的是，《无职》满足了这些要求。它就像轻小说中的严肃文学一样，对很多重大的课题进行了思考与讨论。这正是这部作品吸引人的地方。当然，它并没有因此削减其中“轻”的部分，或者说媚宅成分，因此读者依然大可以轻松地阅读它。我所说的“严肃性”，在于更加隐蔽的一些方面，我将分几个部分来介绍。 设定 幻想作品区别于其他作品最重要之处，便在于它需要庞大的设定内容。对我个人而言，这正是异世界作品魅力的最大来源。这种设定内容包含了地理、生态、历史、环境、文化、风俗等几乎一切方面。很多爽文都忽略了设定的重要性，以为只要画一张世界地图便算创造了异世界，结果作品最终的表现就像中世纪欧洲人全体搬了个家（更不用说很多作者连中世纪欧洲人的感觉都写不出来）。设定的不完善正是这些作品的廉价感的来源。因此对于异世界作品来说，一套详尽的、自洽的设定就像地基一样重要。 不过，原创一套世界人文地理和历史当然太过于困难了。因此如何恰当的借鉴或改变现有素材是创作时非常重要的内容。为什么这么多异世界作品以中世纪欧洲为创作蓝本？因为那个时期给人们的感觉神秘而具有一种文化上的风味和美感，契合了多数异世界作品的基调。因此作者便把中世纪欧洲拿来，砍掉一些元素再加入一些元素，开始创作。 在这一点上，《无职》也没能免俗。它作为最早的那一批异世界作品之一，其设定基本上使用了欧洲复古的那一套东西：王国、贵族、骑士。再加上西幻的魔法、龙、勇者，以及日式rpg的冒险者工会、兽耳娘、美女精灵，最后佐之以老套的战争历史背景。收工。少数能够一提的新颖设定是它关于“魔族”概念的设定。不同的魔族被赋予了不同特质，使得它们与其被称为魔族，不如更像是拥有特异功能的人类。然而这种种族设定很巧妙地为整个作品添加了生动性。背负悲剧的斯佩路德族、不善言辞的米格路德族、乐观豪放看淡时间的不死魔族等等，这些人物巧妙地为读者提供了一种新的视角和思考立足点。以这些人物为中心的情节也可以借此做到有新意。 不过基本上，这些东西仍然是大家都熟悉的。然而《无职》的优秀体现在它对于设定的内容的处理上。在作品中，作者很认真地去展现了这个世界运作的原理，去还原各阶级各身份的人物表现。作品中的人物会设身处地地去做出推进情节的行为——让贵族像个贵族，让国王像个国王。这种与真实世界稍异的常识被各种细节很真切地描绘出来，正是这种细节展现出了设定的存在感。 这里我想举《哈利波特》为例子。这部如雷贯耳的幻想小说中对于魔法世界的刻画之生动形象是公认的。请回想一下书中哪些细节让你产生了对于魔法世界的亲近感——我想很多人一下子想不起来。这就是它的高明之处，它将幻想元素作为一种“气氛”融入了作品里，无处不在而又难以言明。它使得魔法世界具有了沙盒那样的可拓展性。这正是设定极其自然时能够达到的境界。当然，《无职》还远没有达到《哈利波特》那种境界，不过在世界设定的完善程度上，已经超过大部分轻小说了。 更重要的一点是：设定是为情节服务的。在《无职》中，几乎提到的每一块大陆、每一个国家都曾经作为舞台发生过特定的情节，这就是很难能可贵的一件事。当然，这也与《无职》的故事大部分以旅途奔波为主有一定关联，但不得不承认的是它很好地借助这种方式还原了一个相当辽阔的世界。 而说到情节，下面就来聊一聊这个任何小说都逃不开的内容。 情节 一个社会渣滓转生了。被泥头车创死，投胎到剑与魔法的世界。 啊，多么熟悉的美妙开局。 读者读到这里，脑海中大概已经能够描绘出这样一个故事了：主角获得一个莫名其妙的外挂，然后开始扮猪吃虎或者大开无双，一路上妹子投怀送抱，接着谈笑间打倒一个谐星似的终极反派，最后像个巨婴一样享受后宫生活。 嗯，这种开篇最近确实都是这个调调。不过事实究竟是怎样呢？ 事实上，《无职》的第一卷直到结尾前都表现得像一本普通的爽文。主角一边意淫一边探索世界，也获得了一个不大不小的金手指，顺便攻略了一个青梅竹马。我记得我当时读到这里时是准备无脑看下去的——直到第一卷结尾时男主鲁迪突然被父亲扔出了家门。 我当时对此感到无法接受：一本爽文，哪有眼见就要把妹子攻略成功了却突然远走他乡的道理？ 然后我意识到，《无职》本质上可能并不是一本简单的爽文。 父亲保罗在信中告诉鲁迪驱逐他的理由：为了帮助他和他的青梅竹马希露菲学会独立生活顺利成长，要将他们分开。 细心的读者可能会发现，这个细节其实已经体现出作者关于“成长”这一话题的思考。“成长”也正是整本书的主线，作者想要展现男主是如何通过一次次事件，从一个废物蜕变成为一个能够独当一面的大人的。 而如果剧情的主线是“成长”，那么这本书的基调便也基本确定了。因为人生不可能一帆风顺，失败和挫折往往能让人学到更多。责任和束缚会促使人成长，而这些要素往往都是沉重的。也就是说，从第二卷伊始，《无职》将彻底告别爽文式的一帆风顺，男主要去经历社会的毒打了。 第二卷中，鲁迪成为了娇蛮千金艾莉丝的家庭教师，眼看就要适应生活的时候，发生了全书最重要的事件——“转移”。 纵观全书，我可以明确地做出这个判断：《无职》的故事，从这里真正开始。 在这次的事件中，方圆数百里的区域（包括男主家乡）的人被随机传送到了世界各地，男主的家业一下子清零。不提亲友的失踪，男主自己也被转移到了世界另一端的魔大陆，自身难保。 第一次看到这里，我感觉就像被扇了一巴掌。大概也就是从那时起我真正摆正了心态来阅读这本书。而在二刷时，我不禁思考作者在设计情节时候的用意。名叫“转移”的这次事件，多么像人生中的飞来横祸。就像某一位博主说的，这个世界不是说你只要没有错就可以过的很好的。当你以为人生步入了正轨，生活总是会来一点出其不意。作者也许是在借此映射人生。 好在男主还年轻，还有资本去闯一闯。他接受建议、锻炼身体、寻求援助、保护弱者，偶尔刷一刷小聪明或者犯下错误，但始终肩负起保护艾莉丝的责任。在这个过程中，我们可以清楚地看见鲁迪的人物形象变得越来越立体，与传统的爽文男主形象渐行渐远。他会冷静地分析利弊、为了保全自己和伙伴绞尽脑汁、为了化解危机不惜舍弃尊严下跪。我们会看见他在成长的过程中屡屡碰壁，犯下小错或大错，有时饥不择食慌不择路，有时甚至造成无谓的牺牲。这些是传统爽文绝对不会出现的内容，因为这些情节意味着男主不是完人。然而，在男主与完人渐行渐远的路上，他距离一个真实成熟的人便越来越近。 在长途跋涉后，鲁迪见到了他的父亲。也许读者在期待一次喜极而泣的欢喜重逢，不过作者再一次沉重地斩断了幻想——男主被误解，与父亲大打出手，甚至对妹妹造成了心理阴影。这一段的剧情表现张力极大，是我最喜欢的几段情节之一。不过我之所以在这里提起它，是因为从中我们可以看出作者在书中反复提及的第二个关键词：亲情。家人之间的羁绊是全书最重要的线索和动机之一。而亲情也正是一个人生命中始终伴随着他的情感的一种，这与小说的成长主题不谋而合。 故事接着发展，男主与希露菲重逢并结婚，成家立业。 好，到此为止，一般成长小说所涵盖的内容基本已经完满了。主角都结婚了欸！拜托，你见过几本轻小说会在主角婚后继续写下去的啊！确实，对于轻小说所瞄准的青少年读者市场而言，结婚确实已经是读者能够有所共鸣的最遥远的事情了，是最适合作为童话故事大结局的事件之一。不过《无职》早已通过之前的铺垫告诉了读者它绝不是任何童话，结婚仅仅只是漫漫人生的一个中转站。 是啊，“转移”事件的创伤还完全没有被抚平，男主的母亲依然下落不明，他作为一个人的目的还远没有达到，故事当然不能就这么结束了。于是他搜寻情报，前往远方营救被困的母亲，在这个过程中，父亲死了、母亲虽得救却成为废人、男主失去了一只手。最后，他抱着说不清的心情回到家，与曾经的老师、现在的同伴洛琪希结婚。 这一段情节很有意思，它很复杂，不好说成功或失败。就像是现实中的大部分事情，有苦有甜，甜苦夹杂，在得到的同时也失去着。 接下来一段剧情又足以令读者头皮发麻：老鲁迪乌斯（是的，也就是未来的鲁迪本人）从未来回到现在与鲁迪见面。 老鲁迪的现状堪称晚景凄凉——妻子丧生，众叛亲离，本人也变得偏执而疯狂。而令人意外的是，老鲁迪的实力无比强悍，就连现在的鲁迪直到结局到没能达到那个层次。也许这是作者在体现“逆境使人变强”的道理吧。不过，这段剧情最大的作用，在于给现在的鲁迪和读到这里的所有读者来了一记“警世钟”——带着众人亲临了一次失去一切的体验。而有句话说得好，“直到你失去，你都不会意识你曾拥有。”作者让所有人藉此深刻体验到了现在一切的来之不易，于是顺理成章地想要守护者一切。这就是这段剧情的意义：一次与未来的会面，激发了之后剧情发展的最大动机。也因此，《无职》显露出了它的第三个关键词：责任。 谈到成长，责任的哲学是绕不开的话题。至此，《无职》的中心思想已经来到了一个鲜有异世界作品，甚至可以说鲜有轻小说曾达到的深度。在责任的驱动下，诞生了我认为是小说中最具代表性的情节：鲁迪为了保护家人，屈服于威胁的源头、反派人物“人神”，不计一切代价与能力远超自身的正派人物“龙神”对战，并惨败。 好，各位，一般的小说中这种事情是反过来的吧？主角不是应该抱着某些老英雄的大腿横扫一切邪恶吗？在这里，我要说的是：这就是《无职》关于个人成长的思考的最鲜明体现之一。主角自始自终都为了一个明确的目标奋斗：守护自己所奋斗来的一切——具体地说，他的家。因此，正派或邪派根本无所谓，只有能否为鲁迪的家人提供庇护之分。而至鲁迪彻底认清哪些人无法庇护他之前，他还需要吃些苦头。 于是，鲁迪拼上一切对战龙神，并被闪亮登场的艾莉丝救下，转投成为龙神手下，然后跟艾莉丝结婚。这一段剧情还是挺一帆风顺的，说明《无职》本质上还是一部轻小说。 再之后，鲁迪总和至今为止的一切人脉，不过仍遭遇了朋友背叛的桥段。不过不得不说在经历了之前的那么多剂猛药之后这段剧情竟然显得并不惊人。也许这就是阅历带给人的沉稳吧。一部小说能够使读者达到这种境界也十分有水准了。 《无职》的主要剧情至此基本分析的七七八八，我主要挑出了我个人觉得最亮眼的部分，最能够使《无职》与一般厕纸区别开的部分。而这些部分，佐以一般轻小说的萌妹子和喜剧元素调节节奏，便成就了极佳的阅读体验。 纵观全书，小说从一个社会渣滓的无故横死开始，以一个人生赢家的寿终正寝结束——围绕着“鲁迪乌斯·格雷拉特”这个人的成长经历，展现了一幅辽阔而生动的奇幻世界图景。各方面的完成度都极佳，作者的文笔也可以称为令人舒适（这里应该更要感谢翻译作品的各位大佬）。在我有限的认知里，这样的好作品难得一遇。 杂谈 我至今任很庆幸我在身心摇摆不定的成长年纪里遇见了这部作品，虽然我本人说不清楚，但我可以肯定它带给我不小的影响。此外，它的动画版上映之初掀起的那场网络风暴，也给初识互联网、不谙世事的我来了一次“醍醐灌顶”——应该说我现在的互联网免疫力有一半来源于此……真是奇妙的缘分。 “个人传记”类型的小说，在文学史上拥有很重的分量。在我看来，此类作品之所以令人难以忘怀，主要因为我们可以透过主人公的人生思考自身的一些问题。这里我举狄更斯的《大卫·科波菲尔》为例子，这是一部最为典型的人物中心的小说作品。一个人出生、成长、学习、失败、奋斗、老去——他生命中经历各种各样的事、遇到形形色色的人，想把这些整合进一部小说，其难度无比之大。因为，它想表现的基本上是我们人类能够切身思考的最宏大的话题：人生。回到《无职》这部作品，它本身可能没有那么多令人拍案叫绝的精妙桥段，但是它做到了生动地去体现一个人这一生的一切，遑论它还为其创造了一个栩栩如生的异世界，这无疑是一大壮举。自然受题材影响，它的故事并不及《大卫·科波菲尔》那般严肃（虽然这么说，不过事实上《大卫·科波菲尔》基本上也算是当时的“轻小说”了），但这对于我们这样的读者来说自然不是问题。作为一部轻小说，它还有什么能被我们进一步苛求的呢。 不少网友评价《无职》为“史诗一般的小说”。我非常赞成这种说法。我在写这篇评价时，找不到一个鲜明的方面来作结。正如上文所言，它的主题是“人生”，而我所能想到的一切人文的作品的主题基本都在这两个字的框架之下。我可以谈毅力，可以谈追梦，可以谈勇气，可以谈爱与友情——一切都被囊括在“人生”这个短短的词当中。我的阅历尚还很浅，而世界上的“史诗”的作品还有很多，我自然不敢于高谈阔论。 当下，我展望“人生”这个词的时候，我想到了这无比广阔的世界。而当十几年，几十年过去之后，我又会因什么契机想到这个话题？我又会想到什么呢？ ——一部轻小说，能够引发我们思考这些，应该也算是成功了吧。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://lonion1124.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"ACGN","slug":"ACGN","permalink":"https://lonion1124.github.io/tags/ACGN/"}]},{"title":"入宅四年——补番推荐个人榜","slug":"入宅四年——补番推荐个人榜","date":"2022-12-20T16:00:00.000Z","updated":"2024-07-09T14:58:07.154Z","comments":true,"path":"posts/7654b3045b6b/","permalink":"https://lonion1124.github.io/posts/7654b3045b6b/","excerpt":"我心目中的补番top10","text":"四年了。从2018年的暑假，我偶然点开一部名为《樱花庄的宠物女孩》的动漫，随后正式入宅开始算起，竟然已经四年了。而今又到了放暑假（？）的时候，最近开了不少老坑，感慨良多，本来想着写点什么纪念一下，洋洋洒洒写了一千多字，然后意识到大概根本没人愿意看我一个人在这自我感动，索性就干脆回顾这几年看过的所有作品，搞一个推番top10，权当纪念。顺便找找有没有跟我志同道合的朋友。 top10 为美好的世界献上祝福！ 异界题材不得不说的作品，可谓一股清流。当我描述我心目中优秀的异世界作品时，它展现出的温馨、欢乐、脱线背后的友谊，远比那些粗制滥造的爽文更加闪亮。 top9 来自深渊 奈落之地，究竟有着怎样的答案？这是信念与绝望的对撞，一个逐渐陷入地狱的童话。也许不少人对这部作品的印象停留在残忍和黑暗，但是透过这些迷雾，我从这部动画里感受到了最温暖的精神内核。深渊力场使人万劫不复，但它也将地面的阳光洒向每一个角落。 top8 末日时有没有空？在干什么？可以来拯救吗？ 美好的事物也许总会逝去，但注定的命运也会使美的光芒更加闪耀。在不可抗拒面前，最无力的反抗也是最有力的。它作为催泪作品被广为人知，但是我的观看体验更像是灵魂被撕去了一角，久久不能忘怀。 top7 吹响！上低音号 这部作品被认为是京阿尼在10年代初的转型期后的中兴之作。虽然都是熟悉的题材，但京阿尼就是能够带来纯粹的感动。梦想与坚持，汗水与青春——看着这部作品，祭奠我们仿佛不曾到来的高中年华。 top6 如果有妹妹就好了 我很喜欢业界题材的作品，无论写实还是欢脱。天赋与努力、热爱与坚持，辅之以喜人的人设、大大大的福利和五花八门的桌游（真的什么都有），在让人愉悦的同时也展现了一定的深度。当你想着“生活中如果有点这个那个就好了”的时候，它能告诉你答案。 top5 妄想学生会 syd虽然通常以“黄段子”著称，不过它在日式幽默与吐槽方面的功力也可谓炉火纯青。有的搞笑作品把人物悉数塑造成小丑，有的作品则赋予他们幽默的灵魂。回到那个四月，樱花树下，校门口前。 top4 飞翔的魔女 这部作品最大的亮点在于它是一部纯粹的日常番，不（太）借助废萌而展现美好。明明打着魔幻的旗子，但却不可思议地展现出了令人向往的岁月静好。在乡村日常的塑造上，我喜欢这部作品更胜于悠哉日常大王。偶尔的魔法气息，则更像是平淡生活的一个点缀，令人无比舒畅。 top3 无职转生~到了异世界就拿出真本事 日本异世界题材，不太客观地说，真是“出道即巅峰”，然后每况愈下。无职作为最早的那一批作品，真正创造出了大有可为的异世界。这是一个可怜可恨的失败者在灾难中的成长、改变与救赎——这是友情、爱情、亲情的力量，这是异世界应该有的魅力。 top2 比宇宙更远的地方 “当你无法回头时，旅途才真正开始。”坐上与平时方向相反的列车，去看看从未见过的景色。一场说走就走的旅行，一次呐喊的青春，一个梦想，一瞬感动，一场相识。前进，向着每个人心中那比宇宙更远的地方。 top1 白箱 白箱啊，有太多想说的话，但不知道从何夸起。不仅是从作品角度的极高完成度，它展现出的内容，一代代动画人的坚持，一位位追梦人的努力，它唤醒了每一位动漫爱好者最开始的热爱——这份热爱，铸就了业界的不朽传奇，就像喵森说的：“这，就是我坚持的理由。” 另外，我的个人博客上有它的长评，欢迎访问：《白箱》：献给每一个热爱动漫的人 结语 一部好的动漫作品的优秀是多元的。作画、音乐、配音、分镜、演出，以及剧情和主旨思想，这些要素共同构成了一部动漫。很多时候，作品只要做到了其中几个方面的优质，就足以被人记住。然而我认为这还不能被称为“神作”。作为娱乐行业的产物，让人看得舒服是基础，这就要求了作画等方面的质量，以及恰当的节奏安排或者切合气氛的福利镜头。而只有当满足了这个基础，一些作品在让人开心地看完的同时也能使人产生一些思考或者感悟，抑或是给人以力量或者安慰，那么我愿称之为一部优秀的作品。而以上的10部动漫，就是在我印象中的优质作品里，最符合我个人胃口的前十部。 此外，日漫神作遍地，我看完的其实不多。有人可能要问了，魔园呢？幸运星呢？石头门呢？巨人呢？四谎呢？cl呢？少终呢？你到底有没有品味啊拜托！ 啊这，对对对我错了，别骂了别骂了，在看了在看了，真的。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://lonion1124.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"ACGN","slug":"ACGN","permalink":"https://lonion1124.github.io/tags/ACGN/"}]},{"title":"在hexo+Icarus4.x搭建的博客上添加3D飘雪效果","slug":"在hexo+Icarus4.x搭建的博客上添加3D飘雪效果","date":"2022-08-12T16:00:00.000Z","updated":"2022-08-12T16:00:00.000Z","comments":true,"path":"posts/84656f9a144d/","permalink":"https://lonion1124.github.io/posts/84656f9a144d/","excerpt":"是雪啊！（喜","text":"今天由于全站大美化升级，我便想着添加一个飘雪效果（虽然现在是夏天）。不过网上大部分的文章中提供的下雪绘制算法都较为简单粗糙，效果不甚美观，也缺乏针对icarus主题的安装方法（这个主题真是挺小众的……）。在找到一个很漂亮的飘雪算法后，看到安装指南只提供了html源码，没有半点相关知识的我本来是果断选择放弃的，但是我没有死心，连蒙带猜地试了几下之后竟然成功了！我都佩服我自己……不过这也是多亏了我之前各种瞎折腾的经历。 本文就记录一下在hexo+Icarus4.x搭建的博客上添加3D飘雪效果的步骤，方便其他与我状况类似的人的使用。 下载资源 请见这里。 注：资源不保证一直有效 资源正常，则会得到名为snow.js的文件。 此外，还会有如下代码，可以一并复制（此代码有些小问题，建议直接使用后文里提供的）： &lt;script type=&quot;text/javascript&quot; src=&quot;http://apps.bdimg.com/libs/jquery/1.7.2/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;snow.js&quot;&gt;&lt;/script&gt; &lt;style type=&quot;text/css&quot;&gt; .snow-container&#123; position:fixed; top:0;left:0; width:100%; height:100%; pointer-events:none; z-index:100001; &#125; &lt;/style&gt; &lt;div class=&quot;snow-container&quot;&gt;&lt;/div&gt; 部署代码 将“snow.js”放入“source/js/”文件夹（根路径为博客根目录+”/themes/icarus/“，下同）。 在“layout/”文件夹中找到“layout.jsx”文件，在body标签内（即“&lt;/body&gt;”之前）加入如下代码： &lt;script type=&quot;text/javascript&quot; src=&quot;http://apps.bdimg.com/libs/jquery/1.7.2/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/snow.js&quot;&gt;&lt;/script&gt; &lt;div class=&quot;snow-container&quot;&gt;&lt;/div&gt; 当然如果文件中已经引用过JQuery的，前两行可以不用加。 在“source/css/”文件夹中新建一个“custom.styl”文件，在其中写入如下代码： .snow-container &#123; position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 100001; &#125; 注：关于custom.styl的更多神奇用法，可以参考这篇教程。 在“source/css/”文件夹中找到“style.styl”文件，在最后一行加入下列代码： @import &#39;./custom&#39; 其功能是引入刚刚新建的“custom.styl”。 大功告成！在根目录进入git bash，使用下列代码查看效果： hexo g hexo s 正常的话就可以部署了！ 结语 博客美化毕竟是锦上添花，有人喜欢花里胡哨，有人喜欢极简。Icarus主题其实是走极简风的，不过在我的魔改下变得逐渐生动起来。但是博客到底重在内容，创作第一，美化其次。","categories":[{"name":"技术指南","slug":"技术指南","permalink":"https://lonion1124.github.io/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"}],"tags":[]},{"title":"关于换电脑之后的博客部署","slug":"关于换电脑之后的博客部署","date":"2022-08-09T16:00:00.000Z","updated":"2022-08-09T16:00:00.000Z","comments":true,"path":"posts/d9e0a0273050/","permalink":"https://lonion1124.github.io/posts/d9e0a0273050/","excerpt":"换电脑之后如何继续让博客正常运转呢？","text":"大概在两个半月前，我的戴尔电脑暴毙了。 虽然很伤心，不过伤心的是陪我4年的朋友突然离去。该骂还是要骂：实体店那帮人塞给我的这个型号的品控是真的不行。不过其中也有当年我购买设备经验不足（千万别去实体店！）导致的诸多因素在内，所以也没什么可以怨恨的。总之只能接受这个事实。现在我的网购新电脑到了，使用体验良好，所以就这样吧……这也许就是有了新欢忘了旧爱吧（笑 然后，关于这个个人博客，由于它的运行原理是本地文件部署至github仓库，所以在更换电脑之后就要重新设置其中的连接。我将其步骤记录在这篇文章里（我希望5年内我不会再用到这个）。 顺带一提，我7月中旬就写好了这篇博客，这是因为我当时以为我已经成功了，然而事实证明我根本没有成功。但是之后因为各种各样的事情耽误了，于是就拖到现在。 主要的步骤来源于这篇博客。 安装必要程序 新电脑上需要重新安装Node.js和Git 可以参考这篇博客。 拷贝原来的本地文件 好在我的硬盘没坏，里面的文件可以拷贝出来。 将原来的本地文件（即根目录）拷贝至新电脑。我依然是在D盘里建立了blog文件夹存放相关文件。 安装hexo 在刚刚拷贝的文件夹中右键，选择“git bash here”，然后键入下列代码： npm install hexo-cli -g 即可安装hexo 注意，需要在博客本地文件的文件夹中安装。 接着键入如下代码检查是否安装成功： hexo -v 注1：7月份这一步没有成功，这是因为新电脑配备了禁止运行脚本的安全策略。通过这里介绍的方法可以将该策略修改。 注2：因为魔法原因，npm的下载速度很慢，所以后来我使用了cnpm（即npm中国版）代为下载。操作方法见这里。 注3：7月份失败的另一个原因是电脑阻止了npm的安装程序安装hexo，解决这个问题的方法是在git bash窗口中运行以下代码： cnpm install --force 生成新电脑的ssh值 还是在“git bash here”里面，输入下列代码： ssh-keygen -t rsa -C &quot;邮箱地址&quot; 其中“邮箱地址”（含引号）替换为在注册github时绑定的邮箱地址。 然后连续点回车直到该命令执行结束。 接着，在它打印的语句中找到其中有一个“id_rsa.pub”的文件路径，通过这个路径打开这个文件（用记事本打开即可），里面就是新电脑的ssh值。 将ssh添加至github 登录网页端github，点击右上角个人头像，在下拉菜单中选择“settings”选项，然后在右边栏选择“SSH and GPG keys”，点击“new SSH keys”，取名并将刚才生成的ssh值复制进去。 添加成功后，在“SSH and GPG keys”界面中会出现刚刚新添加的内容。 换源 最后一步了！ 回到本地博客文件夹，进入“git bash here”窗口。 键入下列代码 npm config set registry &quot;repository地址&quot; 其中“repository地址”（含引号）替换为原先的配置文件（“_config.yml”，应该在根目录中）里面的“repository: ”之后的网址。 这一步成功后，就可以像之前一样写博客上传了。 感想 真是相当麻烦……当然，主要是因为我并非专业人员，仅仅是一介学生罢了。不过即使是在学生中，也不乏诸多技术高到令人瞠目结舌的人物。因此，这也不是抱怨的借口。 这个博客从4月初运行至今，正经文章没写几篇，大部分时间都花在各种折腾与优化上了。在折腾的过程中，我也认识到，折腾总是会结束的。不是我与困难达成共识，就是困难与我达成共识，终归到底是我与自己达成共识。总之，这个博客我希望一直能运行下去，路漫漫其修远兮，吾将上下而求索。","categories":[{"name":"技术指南","slug":"技术指南","permalink":"https://lonion1124.github.io/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"}],"tags":[]},{"title":"《白箱》：献给每一个热爱动漫的人","slug":"《白箱》：献给每一个热爱动漫的人","date":"2022-06-01T16:00:00.000Z","updated":"2022-06-01T16:00:00.000Z","comments":true,"path":"posts/d0d85df34e0e/","permalink":"https://lonion1124.github.io/posts/d0d85df34e0e/","excerpt":"——谈PA社“唯一真神”《白箱》","text":"“SHIROBAKO”是指映像业界所使用的装有录影带的白箱，也即是一部作品完成之时，制作者所得到的最初的成果物。与插画或摄影等制作华丽的贩售用包装相比，仅仅是装入白箱中的录影带或许显得很不起眼。但，在那里却满载着创作者们的心意。 我怀着无比激动的心情写下这篇文章，记录下在观看这部作品时的感触。简单来说，《白箱》是一部以现代日本动漫业界为背景的作品，展现了一群热爱动漫并以此为生的人们的日常。乍一看，这是十分常见的职场番+日常系配置，如果只是“动漫业界”这一噱头并不足以令它惊艳。但是，正是由于它的主旨深刻，以及PA社过硬的人设和剧情编排，得以成就这一段我心目中的原创神话。 那么，究竟是什么成就了它呢？ 前排提示：本文内容为原创个人观点。以下内容含有剧透。 真实 虽然我还是一个学生，不过我自然是明白职场肯定不像今年的《前辈有够烦》里那样轻松快乐。在我模糊的想象里，职业生涯应该是免不了挫折、不和、熬夜和绝望的。然而，很多职场动画出于娱乐的目的，却有意美化了内容。在这一点上，《白箱》做得很好。它找到了“艺术性”和“现实性”之间的平衡点，在给观众带来会心一笑的同时有不经意间展现出业界的残酷，这于深化主题和树立人物形象是很有利的。 动画的主人公，制作进行宫森葵（外号“喵森”），在职场生涯的一开始就以一个疲于奔命、24小时都不一定睡得了觉的形象出现。而这并不是全部，因为马上我们就看到了低谷期的监督、“万策尽”的制作管理、发烧的作画监督、打工兼职的新人声优、经验不足的原画，以及各种跑路撂挑子的业内人士。不仅如此，很多剧中人物是有现实原型的。当字幕组贴心地把每一个角色的现实原型挂出的时候，这厚重的现实感就很难不扑面而来了。 看到这里，我想说，动漫不是只有转生、异世界和美少女，它可以是有血有肉的一幅现实景象。事实上，《白箱》剧情围绕展开的冲突很大一部分是建立在剧中人物克服挫折并成长上面的。喵森帮助不靠谱同事收拾烂摊子、原画绘麻遭遇创作瓶颈、从业者之间的意见不合、各种修正返工推倒重来等等，这些角色遇到的正是业内生活的真实写照。动画通过这些角色的成长带给观众感动和体悟。 每一个人都有属于他自己的故事。正如剧中“哥特萝莉大人”，角色设计小笠原纶子所言： 所有职业都有它的痛苦期。 而职场的感人至深，便是在友情和信念下走出痛苦期，找到自己的价值。 当然，喵森是幸运的。虽然遇到过挫折，但是身边的同事都是一些可爱的充满正能量的人。也许现实生活中的挫折不仅仅只是剧中体现出的那些，可能平冈大辅的遭遇更加现实，但是不管怎样，《白箱》这部动漫能够在内容中展现出这样的深度，属实难能可贵。不得不佩服PA社的人设功力果然名不虚传。 在增加现实性这一块上，制作组还采用了另一个很巧妙的方法，那就是“角色原型”。通过建立与现实人物的联系，加强观众的代入感。这个点子很妙——尤其是对于有一定番剧阅历的观众来说。当看到众多的业界大佬齐聚一堂，展示着活生生的一面的时候，确实能够感到一种全明星嘉年华般的激动气氛。在这部动画中，你可以找到导演《EVA》的庵野秀明、负责过《少女与战车》音乐的滨口史郎、《魔卡少女樱》的制作公司Madhouse以及《进击的巨人》制作公司的创立者丸山正雄、《钢之炼金术师》的监督水岛精二、两个著名系列构成吉野弘幸和奈须蘑菇的“合体”、以及田村由香里、中原麻衣等著名声优的客串。 这些大腕在《白箱》中作为“背景板”撑起了整个业界的气氛，随着主角的工作推进，我们仿佛切身体会了一番现实业界。《白箱》这部作品，不仅反应现实的厚度，同时也借助现实深化作品本身，这或许是它独特的魅力。 传承 灰暗的现实并不是一切，黑夜中总有一盏指引方向的灯。《白箱》中，有一个令众多观众心中一暖的主旨，那便是传承。 动画业界四十年，一代一代的动画人站起又逝去，日新月异的是技术，不变的是那一份坚持。然而纵使有心，总抑制不住时代的大潮。九十年代的老画师拿现在的萌系作品没辙，新生代画师则也缺少一份经验和熟练。《白箱》为我们展示了业界的一脉相承，老前辈为新人提点经验，而新人在数年后又重新给后辈指示方向。一代代的经验在其中积淀，支撑着动画艺术的根基。 动画中，有这样四位原画师。已经从业四十年的杉江、业务熟练受人尊敬的小笠原、第一次担任角色设计的井口小姐，以及年轻的新人绘麻。他们分别是四代原画师的象征。杉江是技术、是经验、是历史；小笠原是干练、是水平；井口是进步、是提升；绘麻是未来、是希望。在体现代代人之间的技艺传承时，这是极佳的人设搭配。 而动画正是抓住这一点，非常细腻地展现了他们之间的故事。令我印象深刻的有几个片段，首先是绘麻遭遇创作瓶颈，苦于工作压力对自己产生怀疑的时候，杉江拜托井口小姐带着她出去散步，排解压力。这就是一种工作经验的传承。随后话头一转，我们得知这个井口小姐的“散步圣地”，当年正是由前辈小笠原推荐而来的，而小笠原则是从老前辈杉江那里听说的，现在，再由井口告诉新人绘麻……这就好像是原画师精神的一种一脉相传。 井口：所谓的瓶颈啊，是会让人视野变小的。所以，这时候就需要看看广阔的景色。 而在剧中，这种“代代相传”的精神不仅体现在原画师身上，更是贯穿着整个动画业界。在公认的神回之一，第十九话中，我们随着喵森一起目睹了老武藏野动画的如火岁月。在习惯了现代业界的紧张气氛后，我们回到三十年前，在那个原画全靠赛璐珞、美术背景纯手绘的年代，看到当今大佬们的年轻模样，看到他们为了梦想齐聚一堂，不舍昼夜地挥洒汗水，不由地感受到无与伦比的震撼。而如今，这些曾经并肩奋斗的伙伴虽然各散东西，但却仍然为着动画业界贡献力量。我们再一次感受到，随着时代变了，画板变成了透视台、赛璐珞变成了电脑绘图、胶片变成了视频剪辑，但是不变的是初心、不变的是梦想、不变的是热爱。在变化的周遭里留下不变的精神内涵，这就是传承。 我在看到这个片段时，所联想的事还有一件，那就是京阿尼。两年前的火灾，几乎烧毁了这家传奇动画公司几十年来的所有珍贵的原画，还夺去了数十位不可多得的业界人才的生命。两年多来，每多看一部京阿尼制作的动画，我心中对那个灾难的痛楚就加深一分。在观看《白箱》时，我意识到，大火烧死的，正是动画里这一群活泼泼的人啊！大火带走的，正是他们这么多年努力的结晶啊！这么多为了梦想燃烧的激情的人，多少热泪和心酸，多少故事和别离，在大火中付之一炬，怎有此理可言！可是，逝去的不会再回来，我们除了纪念之外做不到太多。京阿尼素来以对手绘的坚持著称，其中的画师大都也是在像《白箱》中那样前辈带后辈的氛围中成长起来的。我想，京阿尼所体现出来的传承理念，它展现的精神，正是业界学习的宝藏。如今动画界中经常有“世风不古”的声音出现，也许像这样牢记过去遗留的财富，坚定在新时代的梦想，才是唯一的解法吧。 热爱 因为热爱，所以坚持；因为热爱，所以感动；因为热爱，所以铸就传奇。《白箱》的魅力在于，在剧中人物找回初心的同时，也唤醒了我们心中最初的那份对于动漫的热爱。 为什么会进入动画业界？纵然有人是浑浑噩噩地被“分配”了工作，但更多的从业者是靠着曾经的一次偶然的被动画惊艳或感动的瞬间，靠着一份鬼使神差到来的热爱。这是一个简单的道理——热爱给人力量，热爱使人坚持，热爱让我们克服困难。而在《白箱》的完美演绎下，这个道理具有着无与伦比的感染力量。有的时候，应对生活中复杂的坎坷，我们仅仅只是需要一些简单的力量，比如爱、比如希望、比如梦想。这些浪漫的概念，正是应该由动漫体现出来的。 在《白箱》的设定里，每一位从业者或多或少都有一部“本命作”，是他们对于业界最初的向往。这些作品就像个人的桃花源，承载着他们心中最美好的憧憬，因此哪怕被业界折磨得遍体鳞伤，也可以在这里得到些许治愈。就像喵森的《山刺猬安第斯恰奇》，就像原画远藤和3D下柳的《伊迪潘》等等。这些作品是一种意向，是一种抒情的寄托，它们使我们回想起我们正在坚持做的事情。在我们的日常生活中，有没有什么是因为热爱所以坚持的呢？很多时候，我们会觉得仿佛生活中放眼望去到处是迫不得已为形势所迫，“追梦”是一个多么令人向往的概念，可惜追梦好像已然是一种梦想。但是，我不相信一切就这样了。无论何时，从兴趣和喜好当中汲取的力量都是真实存在的。我想说的是，哪怕生活的90%都是被安排好的，我们依然可以在剩下的10%里去拥有梦想，而在那90%里也许也有热爱，只是尚未被发现。 静香：什么时候我们能再在一起制作《七福阵》啊。 在动画的开篇，讲述了主角五人组高中时期共同制作的小动画《七福阵》，在后面的剧情里，这部动画也经常作为她们的梦想而被提及。《七福阵》凝聚了喵森等人对于动画业界最开始的追求，是她们对于动画的热爱的具象化。因此，每当她们遭遇挫折，对未来或自己的选择感到迷茫和困惑的时候，感叹一声何时再做《七福阵》，便好像找到了初心。 在我们的生活中，是否也有一部“《七福阵》”呢？我相信是有的，只是有时我们需要去找到它。能够为了梦想而努力本身是一件很幸福的事，在我不多的阅历中，这样的经历和机会不多。因此，才会更想把握住所谓“热爱”，因为热爱是这样一种神奇的力量，哪怕看不见成果和回报，依然会坚持去做。而在过程中所感受到的便是幸福。这是《白箱》给我的思考。在很多重要的抉择中，爱好不是一件被重点考虑的事情，这是理智却令人难受的。很多时候我们已然为各种事物做出放弃，在遇到追求热爱的机会时就更不能放弃。能够一直热爱动画的动画人是幸福的，而这种幸福极可贵，因为多数从业者都在现实的洗刷下幻灭了。热爱的力量是有力的，也是脆弱的。珍惜吧！ 在观看《白箱》的时候，我感到有力量在涌动。哪怕在非抒情段也可以藉此有所思考。我想，《白箱》唤醒了心中的那份热爱，对动漫的热爱，也是由动漫产生的对生活的热爱——而这，就是坚持下去的理由。 其他的一些杂感 有人觉得《白箱》的观看门槛很高，我不否认。但是如果有人询问我这个问题，我会告诉他《白箱》老少咸宜。这是因为，《白箱》固然描述的是动画业界，充满了各类“老二次元”的元素，因此看过许多番剧、对ACGN产业了解颇深的人在观看时确实能够得到酣畅淋漓的体验，然而《白箱》所体现的精神内核则是不需要任何所谓“圈内知识”的铺垫的。哪怕你看不懂剧中哪边致敬EVA，哪边又捏他少女与战车，这也不妨碍你享受到纯粹的欣赏作品的乐趣。当然，能够看懂各种梗自然是最好的。 （剧场版剧透注意）另外提一下，刚刚看完的TV版的朋友们不要马上去看剧场版。剧场版作为一个后日谈，整体的情绪线更加低迷，展现的现实压力也更大。而对于刚刚经历过24集的风风雨雨，陪着武藏野的那么多热情可爱的人们共克难关的补番观众来说，在剧场版一开始就看到武藏野动画濒临倒闭、公司人去楼空、办公室物是人非、尤其是喵森情绪低落的时候，这个落差可能会带来超出于预想的反效果。对于我个人来说，在补完番后两天立刻观看了剧场版，看到一直以来已然像全局精神支柱一般的喵森低沉失落，实在非常难过。不过冷静下来想想，整部剧场版做的也确实很不错，主旨非常明确，所有曾经的伙伴也都在剧情里有所作用，作为后日谈来说逻辑也非常顺畅……但正因如此，在现实压力的比重有所上升的剧场版中，这些情节才会深入人心。毕竟动画是2014年的，剧场版是2020年的，老观众有六年时间在消化当初的激动，然后再被剧场版重新唤起。而我们这些补番党如果一下子就快进到后日谈，就难免会有更多的不适。总而言之，如果你真的爱这部作品和作品里的人们，不建议看完TV版立刻去看剧场版。 不管怎样，让我们跟着绘麻小天使跳起天使体操，去迎接无法逃避的生活吧。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://lonion1124.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"ACGN","slug":"ACGN","permalink":"https://lonion1124.github.io/tags/ACGN/"}]},{"title":"《标准日本语》初级47、48课敬谦辞基础知识点整理","slug":"《标准日本语》初级47、48课敬谦辞基础知识点整理","date":"2022-04-16T16:00:00.000Z","updated":"2022-04-16T16:00:00.000Z","comments":true,"path":"posts/0191d5e3e52e/","permalink":"https://lonion1124.github.io/posts/0191d5e3e52e/","excerpt":"去年第一次学到这里的时候觉得我完全掌握了，结果一段时间没碰标日之后全忘光了，这两天对着中级课本抓耳挠腮。不愧是令人闻风丧胆的敬语体系，从初级开始就让人记忆困难。这里将易忘的内容稍作整理。","text":"去年第一次学到这里的时候觉得我完全掌握了，结果一段时间没碰标日之后全忘光了，这两天对着中级课本抓耳挠腮。不愧是令人闻风丧胆的敬语体系，从初级开始就让人记忆困难。这里将易忘的内容稍作整理。 敬体形式与简体形式 所谓的“敬体形式”是谓语词类变形的一种，也可以作为敬语使用。 通常来说，说话的时候基本都要用敬体形式，不过在很多结构里单词作为一种组成部分（尤其是动词）必须要变为简体形。这是由于动词的简体形与基本形、ない形、た形正好是相同的。严格来说这是两个体系里的东西，不过为了记忆方便就放在一起吧。总而言之，敬体形通常以“です”“ます”这类结束意味很强的字头做结尾，而简体形则更加基本。 下表列举了基本的敬体形与简体形的例子，来自中级上课本“日语基础知识”。 动词谓语 敬体形式 简体形式 買います 買う（基本形） 買いません 買わない（ない形） 買いました 買った（た形） 買いませんでした 買わなかった 注：“ありません/ありませんでした”的简体形式为“ない/なかった” 一类形容词谓语 敬体形式 简体形式 忙しいです 忙しい 忙しくないです/忙しくありません 忙しくない 忙しかったです 忙しかった 忙しくなかったです/忙しくありませんでした 忙しくなかった 名词与二类形容词谓语 下表为二类形容词，名词的变化规律与其相同。 敬体形式 简体形式 簡単です 簡単だ 簡単ではありません 簡単ではない 簡単でした 簡単だった 簡単ではありませんでした 簡単ではなかった 注：二类形容词的过去否定敬体形式还可以写成“簡単ではなかったです” 尊他语 第47课的主要内容是尊他语——用于形容他人的敬语。 这两课的尊他语/自谦语的主要变形都体现在动词上，其他成分按照敬体形式来就可以了。 被动形式表敬语 适用于几乎所有动词 为什么说是几乎呢？因为部分动词有属于自己的特殊变化，虽然它们也可以采用这种方式，不过并不常用。 举例（顺便复习被动形式）： 行きます→行かれます（一类动词） 起きます→起きられます（二类动词） 散歩します→散歩されます（三类动词） お（）にられます 适用于至少有两个音节的一类、二类动词。（如“見ます”不可以这么用，因为它太短） 括号中内容为动词ます形去掉“ます”之后的部分。 举例： 読みます→お読みになります 決めます→お決めになります 帰ります→お帰りになります 特殊形式尊他语 有特殊形式的动词优先使用特殊形式 没什么好说的，背就完事了…… 基本形 尊他语（基本形） 見る ご覧になる 食べる/飲む 召し上がる 行く/来る/いる いらっしゃる/おいでになる する なさる 言う おっしゃる くれる くださる 附表：部分特殊尊他语在转化为ます形时的特殊变化 尊他语（基本形） 尊他语（ます形） いらっしゃる いらっしゃいます なさる なさいます おっしゃる おっしゃいます くださる くださいます 自谦语 自谦语为第48课的主要内容。 自谦语用于形容自己或者说“己方”时。不过，我觉得如何界定“己方”还挺麻烦的，很多书上也没有明说。我个人的感觉是，凡谈到相较于说话对方与自己更为亲近的人或物时要用自谦语。这个概念是相对的。 お（）します 适用于至少有两个音节的一类、二类动词。 括号中内容为动词ます形去掉“ます”之后的部分。 举例： 話します→お話しします 見せます→お見せします ご（）します 用于至少有两个音节的三类动词。（实际上，不足两个音节的三类动词也没几个） 用法同上。 举例： 連絡します→ご連絡します 特殊形式自谦语 特别容易跟上面的尊他语搞混…… 基本形 自谦语（基本形） 見る 拝見する 食べる/飲む いただく 行く/来る/いる 参る/伺う 聞く 伺う する いたす 言う 申す あげる 差し上げる もらう いただく 知っている 存じている 其他更为礼貌的表达用法 乱七八糟的语法点，详见标日课本。 表示请求他人做某事，用“动词て形 + いただけますか/いただけませんか” 举例：教えていただけませんか。 更加礼貌的一般自谦说法：动词使役形て形 + いただけますか/いただけませんか 举例：明日、もう一度連絡させていただきます。 “あります”的礼貌说法是“ございます” “います”的礼貌说法是“おります” 美化语：用于名词。日语固有词前一般加“お”，汉字词前一般加“ご” 举例：お食事、お荷物、ご利用、ご家族 结语 初级课本上的用法大致就是这些。之所以会想起做这么一个整理，是因为这些东西确实容易忘。由于是自学的缘故，平时经常没时间弄相关的知识，经常时间一晃就过去好久，回过神来时水平已经大大下降。整理这些知识点，也算是一次复习。这篇整理会上传到博客上，如果也能够帮助到一些其他人的话就再好不过了。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://lonion1124.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"日语","slug":"日语","permalink":"https://lonion1124.github.io/tags/%E6%97%A5%E8%AF%AD/"}]}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://lonion1124.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"开发日志","slug":"开发日志","permalink":"https://lonion1124.github.io/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"},{"name":"杂谈","slug":"杂谈","permalink":"https://lonion1124.github.io/categories/%E6%9D%82%E8%B0%88/"},{"name":"技术指南","slug":"技术指南","permalink":"https://lonion1124.github.io/categories/%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://lonion1124.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"KNN","slug":"KNN","permalink":"https://lonion1124.github.io/tags/KNN/"},{"name":"hexo-onion","slug":"hexo-onion","permalink":"https://lonion1124.github.io/tags/hexo-onion/"},{"name":"随笔","slug":"随笔","permalink":"https://lonion1124.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"前端","slug":"前端","permalink":"https://lonion1124.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"ACGN","slug":"ACGN","permalink":"https://lonion1124.github.io/tags/ACGN/"},{"name":"日语","slug":"日语","permalink":"https://lonion1124.github.io/tags/%E6%97%A5%E8%AF%AD/"}]}